import React, { useState } from "react";
import { useSpring, animated } from "@react-spring/web";
import { useDrag } from "@use-gesture/react";
import { useStore } from "../../../store/store.js";

export const DragableWrapper = ({ children, drag_offset_left, swipe_left, swipe_right }) => {
	const [{ x, y }, api] = useSpring(() => ({ x: 0, y: 0 }));
	const [subBtnBg, setSubBtnBg] = useState();
  const clamp = (num, min, max) => Math.min(Math.max(num, min), max);

  const bind = useDrag(({ currentTarget, dragging, down, movement: [mx, my] }) => {
		if (dragging) {
      my = 0;
			setSubBtnBg(`linear-gradient(120deg, #f093fb 0%, #f5576c 100%)`);
			if (mx < 0) setSubBtnBg(`linear-gradient(120deg, #96fbc4 0%, #f9f586 100%)`);
      mx = clamp(mx,-drag_offset_left, drag_offset_left);
    }
		else {
			// @TODO: Broken for Desktop Users
			if (mx < -20) swipe_left();
			else if (mx > 20) swipe_right();
		}
		api.start({ x: down ? mx : 0, y: down ? my : 0, immediate: down });
	});

	const avSize = x.to({
    map: Math.abs,
    range: [50, 300],
    output: [0.5, 1],
    extrapolate: 'clamp',
  })

	return (
		<animated.div
			{...bind()}
			className={`h-full w-full rounded-md`}
			style={{ background: subBtnBg, touchAction: "none" }}>
      <animated.div className={`w-[12px] h-[12px] rounded-full bg-white`} style={{ scale: avSize, end }} />
			<animated.div
				className={" h-full w-full"}
				{...bind()}
				style={{ x, y, touchAction: "none" }}>
				{children}
			</animated.div>
		</animated.div>
	);
};


export default DragableWrapper;
