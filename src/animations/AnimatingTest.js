/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useStore } from "../store/store.js";

export function Fred(props) {
	const group = useRef();
	const { nodes, materials, animations } = useGLTF("../AnimatingTestIdle.gltf");
	const { actions, names, mixer } = useAnimations(animations, group);
	const aI = useStore((state) => state.aI);
	const isPlaying = useStore((state) => state.isPlaying);
	const isPaused = useStore((state) => state.isPaused);

	useEffect(() => {
		mixer.stopAllAction();
		isPlaying ? actions[names[aI]].play() : actions[names[aI]].reset();
	}, [isPlaying, aI, actions, names, mixer]);
	useEffect(() => {
		isPaused
			? (actions[names[aI]].timeScale = 0)
			: (actions[names[aI]].timeScale = 1);
	}, [isPaused, aI, actions, names]);

	//Fred
	return (
		<group ref={group} {...props} dispose={null}>
			<group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
				<primitive object={nodes.mixamorig1Hips} />
				<skinnedMesh
					frustumCulled={false}
					geometry={nodes.Fred.geometry}
					material={materials.Fred}
					skeleton={nodes.Fred.skeleton}
				/>
			</group>
		</group>
	);
}
useGLTF.preload("../AnimatingTest.gltf");
